==6246== Memcheck, a memory error detector
==6246== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6246== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==6246== Command: ./fractol mandelbrot
==6246== 
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x40689D: ft_strcpy (ft_strcpy.c:20)
==6246==    by 0x405B64: ft_readfile (ft_readfile.c:31)
==6246==    by 0x4019C4: main (main.c:97)
==6246== 
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x405BA5: ft_readfile (ft_readfile.c:38)
==6246==    by 0x4019C4: main (main.c:97)
==6246== 
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x406A99: ft_str_clear_commentaries (ft_str_clear_commentaries.c:25)
==6246==    by 0x4019CF: main (main.c:98)
==6246== 
Initializing OpenCL environement...
==6246== Warning: set address range perms: large range [0x200000000, 0x600000000) (noaccess)
==6246== Warning: set address range perms: large range [0x600000000, 0x800000000) (noaccess)
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x4C2DBB8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6246==    by 0x664CB1B: ??? (in /usr/lib/libnvidia-opencl.so.375.20)
==6246==    by 0x663A12A: ??? (in /usr/lib/libnvidia-opencl.so.375.20)
==6246==    by 0x4E423E0: clCreateProgramWithSource (in /usr/lib/libOpenCL.so.1.0.0)
==6246==    by 0x404433: ftocl_make_program (ftocl_make_program.c:80)
==6246==    by 0x4019E7: main (main.c:97)
==6246== 
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x4C2DBB8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6246==    by 0x664CB3E: ??? (in /usr/lib/libnvidia-opencl.so.375.20)
==6246==    by 0x663A12A: ??? (in /usr/lib/libnvidia-opencl.so.375.20)
==6246==    by 0x4E423E0: clCreateProgramWithSource (in /usr/lib/libOpenCL.so.1.0.0)
==6246==    by 0x404433: ftocl_make_program (ftocl_make_program.c:80)
==6246==    by 0x4019E7: main (main.c:97)
==6246== 
==6246== Conditional jump or move depends on uninitialised value(s)
==6246==    at 0x40685D: ft_strchr (ft_strchr.c:38)
==6246==    by 0x4069C6: ft_strstr (ft_strstr.c:27)
==6246==    by 0x40449E: ftocl_make_program (ftocl_make_program.c:89)
==6246==    by 0x4019E7: main (main.c:97)
==6246== 
==6246== Syscall param writev(vector[...]) points to uninitialised byte(s)
==6246==    at 0x5687B7D: ??? (in /usr/lib/libc-2.24.so)
==6246==    by 0x5B55BAC: ??? (in /usr/lib/libxcb.so.1.1.0)
==6246==    by 0x5B55FAC: ??? (in /usr/lib/libxcb.so.1.1.0)
==6246==    by 0x5B5602C: xcb_writev (in /usr/lib/libxcb.so.1.1.0)
==6246==    by 0x52A9F4D: _XSend (in /usr/lib/libX11.so.6.3.0)
==6246==    by 0x52AA09F: _XReadEvents (in /usr/lib/libX11.so.6.3.0)
==6246==    by 0x52A868D: XWindowEvent (in /usr/lib/libX11.so.6.3.0)
==6246==    by 0x4073DA: mlx_int_wait_first_expose (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==6246==    by 0x40725D: mlx_new_window (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==6246==    by 0x403C2C: ftx_new_window (ftx_new_window.c:58)
==6246==    by 0x4024BF: fractol (fractol.c:65)
==6246==    by 0x401A69: main (main.c:103)
==6246==  Address 0xc58762c is 28 bytes inside a block of size 16,384 alloc'd
==6246==    at 0x4C2CA40: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6246==    by 0x529A395: XOpenDisplay (in /usr/lib/libX11.so.6.3.0)
==6246==    by 0x406EC0: mlx_init (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==6246==    by 0x403114: sf_protected_mlx_init (ftx_data.c:36)
==6246==    by 0x403114: ftx_data (ftx_data.c:76)
==6246==    by 0x403C0B: ftx_new_window (ftx_new_window.c:57)
==6246==    by 0x4024BF: fractol (fractol.c:65)
==6246==    by 0x401A69: main (main.c:103)
==6246== 
==6246== 
==6246== HEAP SUMMARY:
==6246==     in use at exit: 18,714,553 bytes in 14,695 blocks
==6246==   total heap usage: 18,486 allocs, 3,791 frees, 22,132,166 bytes allocated
==6246== 
==6246== LEAK SUMMARY:
==6246==    definitely lost: 0 bytes in 0 blocks
==6246==    indirectly lost: 0 bytes in 0 blocks
==6246==      possibly lost: 704,172 bytes in 1,022 blocks
==6246==    still reachable: 18,010,381 bytes in 13,673 blocks
==6246==         suppressed: 0 bytes in 0 blocks
==6246== Rerun with --leak-check=full to see details of leaked memory
==6246== 
==6246== For counts of detected and suppressed errors, rerun with: -v
==6246== Use --track-origins=yes to see where uninitialised values come from
==6246== ERROR SUMMARY: 17 errors from 7 contexts (suppressed: 0 from 0)
