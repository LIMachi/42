==9854== Memcheck, a memory error detector
==9854== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==9854== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==9854== Command: ./fractol mandelbrot
==9854== 
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x40689D: ft_strcpy (ft_strcpy.c:20)
==9854==    by 0x405B64: ft_readfile (ft_readfile.c:31)
==9854==    by 0x4019C4: main (main.c:97)
==9854== 
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x405BA5: ft_readfile (ft_readfile.c:38)
==9854==    by 0x4019C4: main (main.c:97)
==9854== 
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x406A99: ft_str_clear_commentaries (ft_str_clear_commentaries.c:25)
==9854==    by 0x4019CF: main (main.c:98)
==9854== 
Initializing OpenCL environement...
==9854== Warning: set address range perms: large range [0x200000000, 0x600000000) (noaccess)
==9854== Warning: set address range perms: large range [0x600000000, 0x800000000) (noaccess)
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x4C2DBB8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9854==    by 0x664CB1B: ??? (in /usr/lib/libnvidia-opencl.so.375.26)
==9854==    by 0x663A12A: ??? (in /usr/lib/libnvidia-opencl.so.375.26)
==9854==    by 0x4E42220: clCreateProgramWithSource (in /usr/lib/libOpenCL.so.1.0.0)
==9854==    by 0x404433: ftocl_make_program (ftocl_make_program.c:80)
==9854==    by 0x4019E7: main (main.c:97)
==9854== 
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x4C2DBB8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9854==    by 0x664CB3E: ??? (in /usr/lib/libnvidia-opencl.so.375.26)
==9854==    by 0x663A12A: ??? (in /usr/lib/libnvidia-opencl.so.375.26)
==9854==    by 0x4E42220: clCreateProgramWithSource (in /usr/lib/libOpenCL.so.1.0.0)
==9854==    by 0x404433: ftocl_make_program (ftocl_make_program.c:80)
==9854==    by 0x4019E7: main (main.c:97)
==9854== 
==9854== Conditional jump or move depends on uninitialised value(s)
==9854==    at 0x40685D: ft_strchr (ft_strchr.c:38)
==9854==    by 0x4069C6: ft_strstr (ft_strstr.c:27)
==9854==    by 0x40449E: ftocl_make_program (ftocl_make_program.c:89)
==9854==    by 0x4019E7: main (main.c:97)
==9854== 
==9854== Syscall param writev(vector[...]) points to uninitialised byte(s)
==9854==    at 0x5687B7D: ??? (in /usr/lib/libc-2.24.so)
==9854==    by 0x5B55BAC: ??? (in /usr/lib/libxcb.so.1.1.0)
==9854==    by 0x5B55FAC: ??? (in /usr/lib/libxcb.so.1.1.0)
==9854==    by 0x5B5602C: xcb_writev (in /usr/lib/libxcb.so.1.1.0)
==9854==    by 0x52A9F4D: _XSend (in /usr/lib/libX11.so.6.3.0)
==9854==    by 0x52AA09F: _XReadEvents (in /usr/lib/libX11.so.6.3.0)
==9854==    by 0x52A868D: XWindowEvent (in /usr/lib/libX11.so.6.3.0)
==9854==    by 0x4073DA: mlx_int_wait_first_expose (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==9854==    by 0x40725D: mlx_new_window (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==9854==    by 0x403C2C: ftx_new_window (ftx_new_window.c:58)
==9854==    by 0x4024BF: fractol (fractol.c:65)
==9854==    by 0x401A69: main (main.c:103)
==9854==  Address 0xfa70fdc is 28 bytes inside a block of size 16,384 alloc'd
==9854==    at 0x4C2CA40: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9854==    by 0x529A395: XOpenDisplay (in /usr/lib/libX11.so.6.3.0)
==9854==    by 0x406EC0: mlx_init (in /run/media/lee/Data/Dropbox/42/github/Fract'ol/fractol)
==9854==    by 0x403114: sf_protected_mlx_init (ftx_data.c:36)
==9854==    by 0x403114: ftx_data (ftx_data.c:76)
==9854==    by 0x403C0B: ftx_new_window (ftx_new_window.c:57)
==9854==    by 0x4024BF: fractol (fractol.c:65)
==9854==    by 0x401A69: main (main.c:103)
==9854== 
==9854== 
==9854== HEAP SUMMARY:
==9854==     in use at exit: 18,736,295 bytes in 14,797 blocks
==9854==   total heap usage: 566,449 allocs, 551,652 frees, 259,892,718 bytes allocated
==9854== 
==9854== LEAK SUMMARY:
==9854==    definitely lost: 0 bytes in 0 blocks
==9854==    indirectly lost: 0 bytes in 0 blocks
==9854==      possibly lost: 704,172 bytes in 1,022 blocks
==9854==    still reachable: 18,032,123 bytes in 13,775 blocks
==9854==                       of which reachable via heuristic:
==9854==                         stdstring          : 55 bytes in 1 blocks
==9854==         suppressed: 0 bytes in 0 blocks
==9854== Rerun with --leak-check=full to see details of leaked memory
==9854== 
==9854== For counts of detected and suppressed errors, rerun with: -v
==9854== Use --track-origins=yes to see where uninitialised values come from
==9854== ERROR SUMMARY: 17 errors from 7 contexts (suppressed: 0 from 0)
